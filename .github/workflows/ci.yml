#===================================================================================================
#
#   DESCRIPTION:  Template for continuous integration using Github actions.  This workflow will
#                 install Python dependencies and run tests with a variety of Python versions.
#        AUTHOR:  W. Li
#       VERSION:  1.0
#       CREATED:  1/5/2024
#
# References:
# * https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-pythonCommon
#
#===================================================================================================

name: CI

#----------------------------------------------
# Set the OS and python versions
#----------------------------------------------
on:
  # Configure the branches you want Github actions to run on.
  # Leave blank if you want to run on all branches.
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

#----------------------------------------------
# Configure jobs
#----------------------------------------------
jobs:
  build:
    #----------------------------------------------
    # Set the OS and python versions
    #----------------------------------------------
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v3
    #----------------------------------------------
    # Check-out repo and set-up python
    #----------------------------------------------
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    #----------------------------------------------
    # Install poetry
    #----------------------------------------------
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: false
        virtualenvs-in-project: false
        installer-parallel: true
    #----------------------------------------------
    # Install dependencies
    #----------------------------------------------
    - name: Install dependencies
      run: |
        poetry install --no-interaction --with=dev --no-root
    #----------------------------------------------
    # Run pytest
    #----------------------------------------------
    - name: Test with pytest
      run: >
        pytest
        --doctest-modules
        --cov=./
        --cov-report=xml
        --cov-report=html:pytest-results-${{ matrix.python-version }}
    #----------------------------------------------
    # Save artifacts
    #----------------------------------------------
    - name: Upload pytest test results
      uses: actions/upload-artifact@v3
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: pytest-results-${{ matrix.python-version }}
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
